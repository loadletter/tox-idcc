Find the files in a directory when using SIGUSR1, calculate crc32, md5, sha256, save them in a cache:
dir -- cache.lock
    \- cache/
          \-- packn
           \- packn
Store in the cache previos info (plaintext)

commands:
idcc info packn: send info from the cached file
idcc send packn: send the file
idcc send -1: send a list of all the file as plaintext file
idcc list: like previous but as a tox private message (optional)
idcc remove packn: ?stop the transfer from server side?


Pack Info for Pack #1:
 Filename       filename1
 Description    filename1
 Filesize       240286460 [229MB]
 Last Modified  2009-08-15-00:47:41
 Gets           255
 sha256sum      0deac761bdeb1b693b11bb8d71d726addf89ba05edf7f160653329d98739bfc9
 md5sum         24377220300a0a84319e248b97201afe
 crc32          980FD9B4


Keep number of downloads in memory and write them down when closing?

Load files from the shared directory, and keep path + packlist + lastmodified in memory (linked list?, hash table? array from toxcore/misc_tools.h?)

When SIGUSR1 is received, set a flag (volatile sig_atomic_t),
in the main loop the thing will call a function if the flag is set,
that will walk the directories and check if the file is alredy in memory
or check that lastmodified in memory is equal to the one in the
otherwise start hashing, and then write out to disk
(make the hash function hash only a chunk a time (speed on single core sempron: 2.2ms for 64kb block)(static variables and other magic))
